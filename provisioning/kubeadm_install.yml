---
- name: Install kubeadm
  hosts: all
  become: true
  tasks:
    - name: Disable swapoff
      ansible.builtin.command: swapoff -a
    - name: Prevent swap from turning on after reboots by commenting it in the /etc/fstab file
      ansible.builtin.command: sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

    - name: Let iptables see bridged traffic
      community.general.modprobe:
          name: br_netfilter
          state: present

    - name: Load overlay module
      community.general.modprobe:
          name: overlay
          state: present

    - name: Load overlay and br_netfilter after reboot
      blockinfile:
        path: /etc/modules-load.d/containerd.conf
        create: true
        block: |
          overlay
          br_netfilter

    # Install containerd
    - name: Setup required sysctl params, these persist across reboots
      blockinfile:
        path: /etc/sysctl.d/99-kubernetes-cri.conf
        create: true
        block: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.ipv4.ip_forward                 = 1
          net.bridge.bridge-nf-call-ip6tables = 1

    - name: Apply sysctl params without reboot
      ansible.builtin.command: sysctl --system

    - name: Install containerd
      apt:
        name: containerd
        state: present
        update_cache: yes

    # Configure containerd:
    - name: create directory
      file:
        path: /etc/containerd
        state: directory

    - name: 
      ansible.builtin.shell: containerd config default | sudo tee /etc/containerd/config.toml

    - name: restart containerd
      systemd:
        state: restarted
        daemon_reload: yes
        name: containerd

    # Installing kubeadm, kubelet and kubectl 
    - name: install packages needed to use the Kubernetes apt repository
      apt:
        state: present
        pkg:
         - apt-transport-https
         - ca-certificates
         - curl

    - name: download the Google Cloud public signing key
      get_url:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        dest: /usr/share/keyrings/kubernetes-archive-keyring.gpg

    - name: add the Kubernetes apt repository
      ansible.builtin.shell: echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list

    - name: install kubeadm, kubelet, kubectl
      apt:
        state: present
        update_cache: yes
        pkg:
          - kubelet
          - kubeadm
          - kubectl

    # - name: Prevent kubelet. kubeadm, kubectl from being upgraded
    #   dpkg_selections:
    #     name: python
    #     selection: hold

    # Initialize the cluster
    - name: initialize the cluster
      shell: kubeadm init --pod-network-cidr=10.244.0.0/16
      register: kubeadm_output
    
    - debug: var=kubeadm_output.stdout_lines

    - name: create .kube folder
      become: yes
      become_user: vagrant
      file:
        #path: "{{ ansible_env.HOME }}/.kube"
        path: /home/vagrant/.kube
        state: directory

    - name: copy configuration file
      become: yes
      #become_user: vagrant
      copy:
        remote_src: yes
        src: /etc/kubernetes/admin.conf
        #dest: "{{ ansible_env.HOME }}/.kube/config"
        dest: /home/vagrant/.kube/config
        owner: vagrant
        group: vagrant
        mode: 0644

    # 
    - name: deploy a pod network (flannel) to the cluster
      become: yes
      become_user: vagrant
      shell: kubectl apply -f https://github.com/coreos/flannel/raw/master/Documentation/kube-flannel.yml







